{"version":3,"sources":["calcEquilibrium.js","App.js","serviceWorker.js","index.js"],"names":["selectPivotCol","A","m","n","q","j","selectPivotRow","p","r","Infinity","i","candidate","Number","EPSILON","r2","pivot","temp","calcEquilibrium","game_matrix","length","shifted_matrix","map","row","shift","Math","min","element","push","Array","fill","slice","forEach","unshift","keys","simplex","result","player1","player2","val","value","extractTableauResult","round","decimalPlaces","multiplier","Cell","props","className","type","onChange","Board","this","dataCells","event","onDataChange","label","cols","onClick","onRemoveRow","renderLabelCell","rowLabels","onRowLabelChange","renderDataCell","rows","removeColButtons","onRemoveCol","onAddCol","colLabels","onColLabelChange","renderRow","onAddRow","React","Component","toPercentString","String","Results","e","Game","state","handleDataChange","bind","addRow","addCol","removeRow","removeCol","handleRowLabelChange","handleColLabelChange","target","setState","numberMatrix","splice","calculate","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f20d2f46.chunk.js","sourcesContent":["function selectPivotCol(A, m, n) {\r\n  let q = 0\r\n\r\n  for (let j = 1; j < n+1; j++) {\r\n    if (A[m+1][j] < 0) {\r\n      q = j\r\n      break\r\n    }\r\n  }\r\n  \r\n  return q\r\n}\r\n\r\nfunction selectPivotRow(A, m, n, q) {\r\n  let p = 0\r\n  \r\n  let r = Infinity // Ratio of row border val to candidate pivot val.\r\n                   // Select the row that minimizes this value.\r\n\r\n  for (let i = 1; i < m+1; i++) {\r\n    let candidate = A[i][q]  // candidate pivot value\r\n    if (candidate > Number.EPSILON) { // value at pivot point must be positive\r\n                                      // (use epsilon to avoid rounding error)\r\n      // TODO: Do we need this check?\r\n      // let border = A[i][n+1]  // border value for candidate row\r\n      // // if (A[i][n+1] <= 0) {\r\n      // //   p = i\r\n      // //   break\r\n      // } else {\r\n      let r2 = A[i][n+1] / candidate\r\n      if (r2 < r) {\r\n        p = i\r\n        r = r2\r\n        // }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // TODO: error check that p > 0\r\n  return p\r\n}\r\n\r\nfunction pivot(A, m, n, p, q) {\r\n  // NOTE: Cells must be updated in the proper order, since \r\n  // some cells are calculated based on another cell's new value.\r\n\r\n  // update cells in same row as pivot\r\n  for (let j = 1; j <= n+1; j++) {\r\n    if (j !== q) {\r\n      A[p][j] = A[p][j] / A[p][q]\r\n    }\r\n  }\r\n\r\n  // update cells not aligned with pivot\r\n  for (let i = 1; i <= m+1; i++) {\r\n    if (i !== p) {\r\n      for (let j = 1; j <= n+1; j++) {\r\n        if (j !== q) {\r\n          A[i][j] = A[i][j] - A[i][q] * A[p][j]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // update cells in same col as pivot\r\n  for (let i = 1; i <= m+1; i++) {\r\n    if (i !== p) {\r\n      A[i][q] = (0 - A[i][q]) / A[p][q]\r\n    }\r\n  }\r\n\r\n  // update pivot cell\r\n  A[p][q]= 1 / A[p][q]\r\n\r\n  // TODO: use this code for non-in-place version?\r\n  // for (let i = 1; i <= m+1; i++) {\r\n  //   for (let j = 1; j <= n+1; j++) {\r\n  //     if (i == p && j == q) { // pivot cell\r\n  //       A[p][q] = 1. / A[p][q]\r\n  //     } else if (i == p) { // same row as pivot\r\n  //       A[i][j] = A[i][j] / A[p][q]\r\n  //     } else if (j == q) { // same col as pivot\r\n  //       A[i][j] = (0. - A[i][j]) / A[p][q]\r\n  //     } else {\r\n  //       A[i][j] = A[i][j] - A[i][q] * A[p][j]\r\n  //     }\r\n  //   }\r\n  // }\r\n  \r\n  // swap pivot row/col labels\r\n  let temp = A[p][0]\r\n  A[p][0] = A[0][q]\r\n  A[0][q] = temp\r\n}\r\n\r\n// apply the simplex pivot method\r\nfunction simplex(A) {\r\n  let m = A.length - 2    // rows\r\n  let n = A[0].length - 2 // cols\r\n  let p, q                // pivot point a(p, q)\r\n  \r\n  q = selectPivotCol(A, m, n)\r\n  while (q > 0) {  // while we still have a valid pivot col\r\n    p = selectPivotRow(A, m, n, q)\r\n    pivot(A, m, n, p, q)\r\n    q = selectPivotCol(A, m, n)\r\n\t}\r\n}\r\n\r\n// extract game value and equilibrium strategies from a solved tableau\r\nfunction extractTableauResult(A, m, n, shift) {\r\n  let result = {}\r\n  result.player1 = Array(m)\r\n  result.player2 = Array(n)\r\n\r\n  let val = 1 / A[m+1][n+1]\r\n\r\n  for (let j = 1; j <= n; j++) {\r\n    if (A[0][j] < 0) {\r\n      result.player1[-A[0][j]-1] = A[m+1][j] * val\r\n    } else {\r\n      result.player2[A[0][j]-1] = 0\r\n    }\r\n\t}\r\n  \r\n  for (let i = 1; i <= m; i++) {\r\n    if (A[i][0] < 0) {\r\n      result.player1[-A[i][0]-1] = 0\r\n    } else {\r\n      result.player2[A[i][0]-1] = A[i][n+1] * val\r\n    }\r\n\t}\r\n  \r\n  result.value = val - shift  // unshift\r\n\r\n  return result\r\n}\r\n\r\nfunction calcEquilibrium(game_matrix) {\r\n  let m = game_matrix.length\r\n  let n = game_matrix[0].length\r\n\r\n  // For the pivot method, we need to ensure the value of the game is positive. \r\n  // This is true as long as all the values in a particular row are positive, \r\n  // since Player I could opt to always choose that row. We can safely add a \r\n  // constant to each element of the matrix to accomplish this, then subtract \r\n  // the constant from the final optimized value.\r\n  let shifted_matrix = [...game_matrix].map(row => [...row]) // clone game matrix\r\n  let shift = 1 - Math.min(...shifted_matrix[0])  // the value that when added results in a min value of 1\r\n  shifted_matrix = shifted_matrix.map(row => row.map(element => element + shift)) // apply shift\r\n\r\n  // construct intial tableau\r\n  shifted_matrix.push(Array(n).fill(-1))  // append row of -1s\r\n  shifted_matrix.slice(0, -1).forEach(row => row.push(1)) // append col of 1s\r\n  shifted_matrix.slice(-1)[0].push(0) // set lower right to 0\r\n \r\n  // add col labels, represented as positive integers\r\n  shifted_matrix.unshift([...Array(n+1).keys()].map(element => element + 1)) \r\n\r\n  // add row labels, represented as negative integers\r\n  shifted_matrix.forEach((row, i) => row.unshift(-i))\r\n\r\n  simplex(shifted_matrix)\r\n\r\n  return extractTableauResult(shifted_matrix, m, n, shift)\r\n}\r\n\r\nexport default calcEquilibrium","import React from 'react'\nimport calcEquilibrium from './calcEquilibrium'\n\nfunction round(val, decimalPlaces) {\n  let multiplier = (10 ** decimalPlaces)\n  return Math.round((val + Number.EPSILON) * multiplier) / multiplier\n}\n\nfunction Cell(props) {\n  return (\n    <input className={props.className} type={props.type} value={props.value} onChange={props.onChange}/>\n  )\n}\n\nclass Board extends React.Component {\n  renderDataCell(i, j) {\n    return (\n      <Cell\n        value={this.props.dataCells[i][j]}\n        onChange={(event) => this.props.onDataChange(i, j, event)}\n        className=\"data-cell\"\n        type='number'\n      />\n    )\n  }\n  \n  renderLabelCell(label, onChange) {\n    return (\n      <Cell\n        value={label}\n        onChange={onChange}\n        className=\"data-cell\"\n        type='text'\n      />\n    )\n  }\n\n  renderRow(i) {\n    let cols = []\n    cols.push(\n      <div className='first-col-hidden-cell'>\n        <button className='mod-row-button' onClick={event => this.props.onRemoveRow(i)}>-</button>\n      </div>\n    )\n    cols.push(this.renderLabelCell(this.props.rowLabels[i], event => this.props.onRowLabelChange(i, event)))\n    for (let j = 0; j < this.props.dataCells[0].length; j++) {\n      cols.push(this.renderDataCell(i, j))\n    }\n    return (\n      <div className=\"board-row\">\n        {cols}\n      </div>\n    )\n  }\n\n  render() {\n    let rows = []\n    \n    let removeColButtons = []\n    removeColButtons.push(<div className='first-col-hidden-cell'/>)\n    removeColButtons.push(<div className='hidden-cell'/>)\n    for (let j = 0; j < this.props.dataCells[0].length; j++) {\n      removeColButtons.push(\n        <div className='hidden-cell'>\n          <button className='mod-col-button' onClick={event => this.props.onRemoveCol(j)}>-</button>\n        </div>\n      )\n    }\n\n    removeColButtons.push(\n      <div className='hidden-cell'>\n        <button className='mod-col-button' onClick={this.props.onAddCol}>+</button>\n      </div>\n    )\n\n    rows.push(\n      <div className=\"board-row\">\n        {removeColButtons}\n      </div>\n    )\n    \n    let colLabels = []\n    colLabels.push(<div className='first-col-hidden-cell'/>)\n    colLabels.push(<div className='hidden-cell'/>)\n    for (let j = 0; j < this.props.dataCells[0].length; j++) {\n      colLabels.push(this.renderLabelCell(this.props.colLabels[j], event => this.props.onColLabelChange(j, event)))\n    }\n\n    rows.push(\n      <div className=\"board-row\">\n        {colLabels}\n      </div>\n    )\n\n    for (let i = 0; i < this.props.dataCells.length; i++) {\n      rows.push(this.renderRow(i))\n    }\n    \n    rows.push(\n      <div className='board-row'>\n        <div className='first-col-hidden-cell'>\n          <button className='mod-row-button' onClick={this.props.onAddRow}>+</button>\n        </div>\n      </div>\n    )\n\n    return rows\n  }\n}\n\nfunction toPercentString(val) {\n  return String(round(val * 100, 1), 1) + '%'\n}\n\nfunction Results(props) {\n  if (props.result.value !== null) {\n    return (\n      <div>\n        <h3>Value: {props.result.value}</h3>\n        <h3>Row-player strategy:</h3>\n        {props.result.player1.map((e, i) => <div>{props.rowLabels[i]} {toPercentString(e)}<br/></div>)}\n        <h3>Col-player strategy:</h3>\n        {props.result.player2.map((e, i) => <div>{props.colLabels[i]} {toPercentString(e)}<br/></div>)}\n      </div>\n    )\n  } else {\n    return <div/>\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataCells: [[0, -1, 1],\n                  [1, 0, -1],\n                  [-1, 1, 0]],\n      rowLabels: ['Rock', 'Paper', 'Scissors'],\n      colLabels: ['Rock', 'Paper', 'Scissors'],\n      result: {value: null, player1: null, player2: null}\n    }\n    this.handleDataChange = this.handleDataChange.bind(this)\n    this.addRow = this.addRow.bind(this)\n    this.addCol = this.addCol.bind(this)\n    this.removeRow = this.removeRow.bind(this)\n    this.removeCol = this.removeCol.bind(this)\n    this.handleRowLabelChange = this.handleRowLabelChange.bind(this)\n    this.handleColLabelChange = this.handleColLabelChange.bind(this)\n  }\n\n  handleDataChange(i, j, event) {\n    const dataCells = [...this.state.dataCells].map(row => [...row])\n    dataCells[i][j] = event.target.value\n    this.setState({dataCells: dataCells})\n  }\n\n  handleRowLabelChange(i, event) {\n    const rowLabels = [...this.state.rowLabels]\n    rowLabels[i] = event.target.value\n    this.setState({rowLabels: rowLabels})\n  }\n  \n  handleColLabelChange(j, event) {\n    const colLabels = [...this.state.colLabels]\n    colLabels[j] = event.target.value\n    this.setState({colLabels: colLabels})\n  }\n\n  calculate() {\n    let numberMatrix = this.state.dataCells.map(row => row.map(element => Number(element)))\n    let result = calcEquilibrium(numberMatrix)\n    result.value = round(result.value, 3)\n    this.setState({result: result})\n  }\n  \n  removeRow(i) {\n    const rowLabels = [...this.state.rowLabels]\n    rowLabels.splice(i,1)\n    this.setState({rowLabels: rowLabels})\n    \n    const dataCells = [...this.state.dataCells].map(row => [...row])\n    dataCells.splice(i,1)\n    this.setState({dataCells: dataCells})\n  }\n\n  removeCol(j) {\n    const colLabels = [...this.state.colLabels]\n    colLabels.splice(j,1)\n    this.setState({colLabels: colLabels})\n    \n    const dataCells = [...this.state.dataCells].map(row => [...row])\n    dataCells.forEach(row => row.splice(j,1))\n    this.setState({dataCells: dataCells})\n  }\n\n  addRow() {\n    const rowLabels = [...this.state.rowLabels]\n    rowLabels.push(\"\")\n    this.setState({rowLabels: rowLabels})\n    \n    const dataCells = [...this.state.dataCells].map(row => [...row])\n    dataCells.push(Array(dataCells[0].length).fill(0))\n    this.setState({dataCells: dataCells})\n  }\n\n  addCol() {\n    const colLabels = [...this.state.colLabels]\n    colLabels.push(\"\")\n    this.setState({colLabels: colLabels})\n    \n    const dataCells = [...this.state.dataCells].map(row => [...row])\n    dataCells.forEach(row => row.push(0))\n    this.setState({dataCells: dataCells})\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            dataCells={this.state.dataCells}\n            rowLabels={this.state.rowLabels}\n            colLabels={this.state.colLabels}\n            onDataChange={this.handleDataChange}\n            onRowLabelChange={this.handleRowLabelChange}\n            onColLabelChange={this.handleColLabelChange}\n            onAddRow={this.addRow}\n            onAddCol={this.addCol}\n            onRemoveRow={this.removeRow}\n            onRemoveCol={this.removeCol}\n          />\n        </div>\n        <div>\n          <button className=\"calculate-button\" onClick={() => this.calculate()}>\n            calculate\n          </button>\n        </div>\n        <div className=\"game-info\">\n          <Results \n            result={this.state.result}\n            rowLabels={this.state.rowLabels}\n            colLabels={this.state.colLabels}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}